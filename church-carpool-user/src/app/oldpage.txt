"use client";
import React from "react";
import axios from "axios";
import Stack from "@/components/Stack";
import Box from "@/components/Box";
import Label from "@/components/Label";
import Input from "@/components/Input";
import Button from "@/components/Button";
import Switcher from "@/components/Switcher";
import FormWrapper from "@/components/FormWrapper";
import TextArea from "@/components/TextArea";

export default function Home() {
  const [form, setForm] = React.useState({
    name: "",
    email: "",
    phone: 0,
    noOfAdults: 0,
    noOfChildren: 0,
    address: "",
  });

  const handleChange = (e) => {
    const { name, value, type } = e.target;

    setForm({
      ...form,
      [name]: type == "number" ? parseInt(value) : value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    saveRideRequest(form);
  };

  const saveRideRequest = (form) => {
    axios
      .post(
        "http://localhost:8080/api/v1/ride/ride-request/command/create-ride-request",
        form,
        {
          headers: {
            "Content-Type": "application/json",
          },
        }
      )
      .catch(function (error) {
        if (error.response) {
          // The request was made and the server responded with a status code
          // that falls out of the range of 2xx
          console.log("data ", error.response.data);
          console.log("status ", error.response.status);
          console.log(error.response.headers);
        } else if (error.request) {
          // The request was made but no response was received
          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of
          // http.ClientRequest in node.js
          console.log("request", error.request);
        } else {
          // Something happened in setting up the request that triggered an Error
          console.log("Error", error.message);
        }
        console.log(error.config);
      });
  };

  return (
    <FormWrapper>
      <form onSubmit={handleSubmit}>
        {" "}
        <Box padding={"zero"}>
          <Stack gap={"s1"}>
            <h1>Request a ride</h1>
            <Box padding={"zero"} height={400}>
              <Stack gap={"s1"}>
                <div>
                  <Stack gap={"s-2"}>
                    <Label htmlFor="email">Name</Label>
                    <Input type="text" name="name" onChange={handleChange} />
                  </Stack>
                </div>

                {/* <div>
                  <Stack gap={"s-2"}>
                    <Label htmlFor="address">Address</Label>
                    <Input type="text" name="address" onChange={handleChange} />
                  </Stack>
                </div>

                <div>
                  <Stack gap={"s-2"}>
                    <Label htmlFor="email">Email Address</Label>
                    <Input type="email" name="email" onChange={handleChange} />
                  </Stack>
                </div>

                <div>
                  <Stack gap={"s-2"}>
                    <Label htmlFor="phone">Phone</Label>
                    <Input type="number" name="phone" onChange={handleChange} />
                  </Stack>
                </div> */}

                <div>
                  <Switcher>
                    <Stack gap={"s-2"}>
                      <Label htmlFor="noOfAdults">Number of Adults</Label>
                      <Input
                        type="number"
                        name="noOfAdults"
                        onChange={handleChange}
                      />
                    </Stack>
                    <Stack gap={"s-2"}>
                      <Label htmlFor=" noOfChildren">Number of Children</Label>
                      <Input
                        type="number"
                        name="noOfChildren"
                        onChange={handleChange}
                      />
                    </Stack>
                  </Switcher>
                </div>

                <div>
                  <Stack gap={"s-2"}>
                    <Label htmlFor="comments">Comments </Label>
                    <TextArea name={"comments"} onChange={handleChange} />
                  </Stack>
                </div>
              </Stack>
            </Box>

            <div>
              <Stack gap={"s-2"}>
                <p>
                  By creating an account you agree to the{" "}
                  <a>terms and conditions</a>
                </p>
                <Button type="submit">Request Ride</Button>
              </Stack>
            </div>
          </Stack>
        </Box>
      </form>
    </FormWrapper>
  );
}
